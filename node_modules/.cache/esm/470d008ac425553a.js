let Koa,Router,bodyParser,mongoose,api;_c42‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_c42‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_c42‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_c42‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_c42‍.w("./api",[["default",["api"],function(v){api=v}]]);require('dotenv').config();





const cors = require('cors');


// 비구조화 할당을 통하여 process.env 내부 값에 대한 레퍼런스 만들기
const PORT="4000"
const MONGO_URI="mongodb+srv://2002nare:RMLTFXJNHT6eu6F6@harudb.hvv4jhm.mongodb.net/haruDB"

mongoose
  .connect(MONGO_URI)
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch(e => {
    _c42‍.g.console.error(e);
  });



const router = new Router();


// 라우터 설정
router.use('/api', api.routes()); // api 라우트 적용

// 라우터 적용 전에 bodyParser 적용
app.use(bodyParser());

// app 인스턴스에 라우터 적용
app.use(router.routes()).use(router.allowedMethods());

// PORT 가 지정되어있지 않다면 4000 을 사용
const port = PORT || 4000;
app.listen(port, () => {
  _c42‍.g.console.log('Listening to port %d', port);
});